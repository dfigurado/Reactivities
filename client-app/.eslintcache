[{"C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\index.tsx":"1","C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\activities\\activitydetails\\ActivityDetails.tsx":"7","C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8"},{"size":489,"mtime":1607854590395,"results":"9","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":2250,"mtime":1607883982400,"results":"12","hashOfConfig":"10"},{"size":640,"mtime":1607879459307,"results":"13","hashOfConfig":"10"},{"size":1785,"mtime":1607884079468,"results":"14","hashOfConfig":"10"},{"size":1555,"mtime":1607884316714,"results":"15","hashOfConfig":"10"},{"size":1211,"mtime":1607879784170,"results":"16","hashOfConfig":"10"},{"size":2779,"mtime":1607883670712,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"sjyjsh",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\index.tsx",[],["37","38"],"C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["39"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport { IActivity } from \"../models/activity\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\n\nimport axios from \"axios\";\n\nconst App = () => {\n  //Hooks\n  const [activities, setActivites] = useState<IActivity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\n    null\n  );\n  const [editMode, setEditMode] = useState(false);\n\n  const hanleSelectActivity = (id: string) => {\n    setSelectedActivity(activities.filter((a) => a.id === id)[0]);\n    setEditMode(false);\n  };\n\n  const handleOpenCreateForm = () => {\n    setSelectedActivity(null);\n    setEditMode(true);\n  }\n\n  const handleCreateActivity = (activity:IActivity) => {\n    setActivites([...activities, activity]);\n    setSelectedActivity(activity);\n    setEditMode(false);\n  }\n\n  const handleEditActivity = (activity: IActivity) => {\n    setActivites([...activities.filter(a => a.id != activity.id), activity]);\n    setSelectedActivity(activity);\n    setEditMode(false);\n  }\n\n  const handleDeleteActivity = (id:string) => {\n    setActivites([...activities.filter(a => a.id !== id)]);\n  }\n\n  useEffect(() => {\n    axios\n      .get<IActivity[]>(\"http://localhost:5000/api/activities\")\n      .then((response) => {\n        let activities = [];\n        response.data.forEach(activity => {\n          activity.date = activity.date.split('.')[0];\n          activities.push(activity);\n        })\n        setActivites(response.data);\n      });\n  }, []);\n\n  return (\n    <Fragment>\n      <NavBar openCreateForm={handleOpenCreateForm} />\n      <Container style={{ marginTop: \"10em\" }}>\n        <ActivityDashboard\n          activities={activities}\n          selectActivity={hanleSelectActivity}\n          selectedActivity={selectedActivity}\n          editMode={editMode}\n          setEditMode={setEditMode}\n          setSelectedActivity={setSelectedActivity}\n          createActivity={handleCreateActivity}\n          editActivity={handleEditActivity}\n          deleteActivity={handleDeleteActivity}\n        />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default App;","C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["40","41"],"C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\activities\\activitydetails\\ActivityDetails.tsx",[],"C:\\Users\\Dilrukshan\\Documents\\Ascentic\\POCs\\.NET\\learn-project\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",["42","43"],"import React, { FormEvent, ReactHTML, useState } from \"react\";\r\nimport { Segment, Form, Button } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\ninterface IProps {\r\n  setEditMode: (editMode: boolean) => void;\r\n  selectedActivity: IActivity;\r\n  createActivity: (activity: IActivity) => void;\r\n  editActivity: (activity: IActivity) => void;\r\n}\r\n\r\nexport const ActivityForm: React.FC<IProps> = ({\r\n  setEditMode,\r\n  selectedActivity,\r\n  createActivity,\r\n  editActivity,\r\n}) => {\r\n  const initializeForm = () => {\r\n    if (selectedActivity) {\r\n      return selectedActivity;\r\n    } else {\r\n      return {\r\n        id: \"\",\r\n        title: \"\",\r\n        category: \"\",\r\n        description: \"\",\r\n        date: \"\",\r\n        city: \"\",\r\n        venue: \"\",\r\n      };\r\n    }\r\n  };\r\n\r\n  const [activity, setActivity] = useState<IActivity>(initializeForm);\r\n\r\n  const handleInputChange = (\r\n    e: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    const { name, value } = e.currentTarget;\r\n\r\n    setActivity({\r\n      ...activity,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (activity.id.length === 0) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid,\r\n      };\r\n      createActivity(activity);\r\n    } else {\r\n      editActivity(activity);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          name=\"title\"\r\n          placeholder=\"Title\"\r\n          value={activity.title}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.TextArea\r\n          rows={2}\r\n          name=\"description\"\r\n          placeholder=\"Description\"\r\n          value={activity.description}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Input\r\n          name=\"category\"\r\n          placeholder=\"Category\"\r\n          value={activity.category}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Input\r\n          name=\"date\"\r\n          type=\"datetime-local\"\r\n          placeholder=\"Date\"\r\n          value={activity.date}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Input\r\n          name=\"city\"\r\n          placeholder=\"City\"\r\n          value={activity.city}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Form.Input\r\n          name=\"venue\"\r\n          placeholder=\"Venue\"\r\n          value={activity.venue}\r\n          onChange={handleInputChange}\r\n        />\r\n        <Button floated=\"right\" positive type=\"submit\" content=\"Submit\" />\r\n        <Button\r\n          onClick={() => setEditMode(false)}\r\n          floated=\"right\"\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n        />\r\n      </Form>\r\n    </Segment>\r\n  );\r\n};",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":34,"column":50,"nodeType":"50","messageId":"51","endLine":34,"endColumn":52},{"ruleId":"52","severity":1,"message":"53","line":46,"column":35,"nodeType":"54","messageId":"55","endLine":46,"endColumn":37},{"ruleId":"52","severity":1,"message":"53","line":46,"column":58,"nodeType":"54","messageId":"55","endLine":46,"endColumn":60},{"ruleId":"56","severity":1,"message":"57","line":1,"column":28,"nodeType":"58","messageId":"59","endLine":1,"endColumn":37},{"ruleId":"56","severity":1,"message":"60","line":50,"column":11,"nodeType":"58","messageId":"59","endLine":50,"endColumn":22},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","@typescript-eslint/no-unused-vars","'ReactHTML' is defined but never used.","Identifier","unusedVar","'newActivity' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]